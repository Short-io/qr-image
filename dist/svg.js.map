{"version":3,"file":"svg.js","sourceRoot":"","sources":["../src/svg.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-bitwise */\nconst { SVG, registerWindow } = require('@svgdotjs/svg.js');\nconst { createSVGWindow } = process.browser ? () => window : require('svgdom');\nconst { QR } = require('./qr-base');\nconst { getOptions } = require('./utils');\n\nasync function getSVG(text, inOptions) {\n  const options = getOptions(inOptions);\n  const matrix = QR(text, options.ec_level, options.parse_url);\n  return renderSVG({ matrix, ...options });\n}\n\nlet svgWin = typeof window === 'undefined' ? null : window;\nif (!process.browser) {\n  svgWin = createSVGWindow();\n  registerWindow(svgWin, svgWin.document);\n}\n\nconst colorToHex = (color) => `#${(color >>> 8).toString(16).padStart(6, '0')}`;\n\nasync function renderSVG({\n  matrix,\n  margin,\n  size,\n  logo,\n  logoWidth,\n  logoHeight,\n  color,\n  bgColor,\n}) {\n  const actualSize = size || 9;\n  const X = matrix.length + 2 * margin;\n  const XY = X * (actualSize || 1);\n  const containerElement = svgWin.document.createElement('svg');\n  containerElement.style.display = 'none';\n  svgWin.document.documentElement.appendChild(containerElement);\n  const svg = SVG().addTo(containerElement).viewbox(0, 0, XY, XY);\n  svg.rect(XY, XY).fill(colorToHex(bgColor));\n  for (let y = 0; y < matrix.length; y += 1) {\n    for (let x = 0; x < matrix[y].length; x += 1) {\n      if (matrix[y][x]) {\n        svg\n          .rect(actualSize, actualSize)\n          .fill(colorToHex(color))\n          .stroke(colorToHex(color))\n          .move(\n            x * actualSize + margin * actualSize,\n            y * actualSize + margin * actualSize\n          );\n      }\n    }\n  }\n  if (logo) {\n    const iriLogo = `data:image/png;base64,${\n      Buffer.isBuffer(logo)\n        ? logo.toString('base64')\n        : Buffer.from(logo).toString('base64')\n    }`;\n    svg\n      .image(iriLogo)\n      .size((logoWidth / 100) * XY, (logoHeight / 100) * XY)\n      .move(\n        XY / 2 - ((logoWidth / 100) * XY) / 2,\n        XY / 2 - ((logoHeight / 100) * XY) / 2\n      );\n  }\n  return Buffer.from('<?xml version=\"1.0\" encoding=\"utf-8\"?>' + svg.svg());\n}\n\nmodule.exports = { getSVG };\n"]}