{"version":3,"file":"qr.js","sourceRoot":"","sources":["../src/qr.ts"],"names":[],"mappings":"AAAA,MAAM,EAAE,EAAE,EAAE,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;AACpC,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAE7B,MAAM,aAAa,GAAG;IACpB,IAAI,EAAE,KAAK;IACX,SAAS,EAAE,KAAK;IAChB,QAAQ,EAAE,GAAG;IACb,IAAI,EAAE,SAAS;IACf,SAAS,EAAE,EAAE;IACb,UAAU,EAAE,EAAE;IACd,OAAO,EAAE,UAAU;IACnB,KAAK,EAAE,UAAU;CAClB,CAAC;AAEF,MAAM,cAAc,GAAG;IACrB,GAAG,aAAa;IAChB,MAAM,EAAE,CAAC;IACT,IAAI,EAAE,CAAC;CACR,CAAC;AAEF,MAAM,cAAc,GAAG;IACrB,GAAG,aAAa;IAChB,MAAM,EAAE,CAAC;IACT,IAAI,EAAE,CAAC;CACR,CAAC;AAEF,SAAS,UAAU,CAAC,SAAS;IAC3B,MAAM,IAAI,GAAG,CAAC,SAAS,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC;IACpE,MAAM,QAAQ,GAAG,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC;IAClE,OAAO,EAAE,GAAG,QAAQ,EAAE,GAAG,SAAS,EAAE,CAAC;AACvC,CAAC;AAED,KAAK,UAAU,OAAO,CAAC,IAAI,EAAE,SAAS;IACpC,MAAM,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC;IAEtC,MAAM,MAAM,GAAG,EAAE,CAAC,IAAI,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;IAE7D,QAAQ,OAAO,CAAC,IAAI,EAAE;QACpB,KAAK,KAAK;YACR,OAAO,GAAG,CAAC,EAAE,MAAM,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,KAAK;YACR,OAAO,GAAG,CAAC,EAAE,MAAM,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;QACrC,KAAK,KAAK;YACR,OAAO,GAAG,CAAC,EAAE,MAAM,EAAE,GAAG,OAAO,EAAE,CAAC,CAAC;QACrC;YACE,MAAM,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC;KACnC;AACH,CAAC;AAED,MAAM,CAAC,OAAO,GAAG;IACf,MAAM,EAAE,EAAE;IACV,KAAK,EAAE,OAAO;CACf,CAAC","sourcesContent":["const { QR } = require('./qr-base');\nconst PDF = require('./pdf');\nconst PNG = require('./png');\nconst SVG = require('./svg');\n\nconst commonOptions = {\n  type: 'png',\n  parse_url: false,\n  ec_level: 'M',\n  logo: undefined,\n  logoWidth: 20,\n  logoHeight: 20,\n  bgColor: 0xffffffff,\n  color: 0x000000ff,\n};\n\nconst BITMAP_OPTIONS = {\n  ...commonOptions,\n  margin: 4,\n  size: 5,\n};\n\nconst VECTOR_OPTIONS = {\n  ...commonOptions,\n  margin: 1,\n  size: 0,\n};\n\nfunction getOptions(inOptions) {\n  const type = !inOptions || !inOptions.type ? 'png' : inOptions.type;\n  const defaults = type === 'png' ? BITMAP_OPTIONS : VECTOR_OPTIONS;\n  return { ...defaults, ...inOptions };\n}\n\nasync function qrImage(text, inOptions) {\n  const options = getOptions(inOptions);\n\n  const matrix = QR(text, options.ec_level, options.parse_url);\n\n  switch (options.type) {\n    case 'svg':\n      return SVG({ matrix, ...options });\n    case 'pdf':\n      return PDF({ matrix, ...options });\n    case 'png':\n      return PNG({ matrix, ...options });\n    default:\n      throw new Error('Unknown type');\n  }\n}\n\nmodule.exports = {\n  matrix: QR,\n  image: qrImage,\n};\n"]}