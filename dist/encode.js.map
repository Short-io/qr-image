{"version":3,"file":"encode.js","sourceRoot":"","sources":["../src/encode.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable no-bitwise */\nfunction pushBits(arr, n, value) {\n  for (let bit = 1 << (n - 1); bit; bit >>>= 1) {\n    arr.push(bit & value ? 1 : 0);\n  }\n}\n\n// {{{1 8bit encode\nfunction encode_8bit(data) {\n  const len = data.length;\n  const bits = [];\n\n  for (let i = 0; i < len; i++) {\n    pushBits(bits, 8, data[i]);\n  }\n\n  const res = {};\n\n  var d = [0, 1, 0, 0];\n  pushBits(d, 16, len);\n  res.data10 = res.data27 = d.concat(bits);\n\n  if (len < 256) {\n    var d = [0, 1, 0, 0];\n    pushBits(d, 8, len);\n    res.data1 = d.concat(bits);\n  }\n\n  return res;\n}\n\n// {{{1 alphanumeric encode\nconst ALPHANUM = (function (s) {\n  const res = {};\n  for (let i = 0; i < s.length; i++) {\n    res[s[i]] = i;\n  }\n  return res;\n}('0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:'));\n\nfunction encode_alphanum(str) {\n  const len = str.length;\n  const bits = [];\n\n  for (let i = 0; i < len; i += 2) {\n    let b = 6;\n    let n = ALPHANUM[str[i]];\n    if (str[i + 1]) {\n      b = 11;\n      n = n * 45 + ALPHANUM[str[i + 1]];\n    }\n    pushBits(bits, b, n);\n  }\n\n  const res = {};\n\n  var d = [0, 0, 1, 0];\n  pushBits(d, 13, len);\n  res.data27 = d.concat(bits);\n\n  if (len < 2048) {\n    var d = [0, 0, 1, 0];\n    pushBits(d, 11, len);\n    res.data10 = d.concat(bits);\n  }\n\n  if (len < 512) {\n    var d = [0, 0, 1, 0];\n    pushBits(d, 9, len);\n    res.data1 = d.concat(bits);\n  }\n\n  return res;\n}\n\n// {{{1 numeric encode\nfunction encode_numeric(str) {\n  const len = str.length;\n  const bits = [];\n\n  for (let i = 0; i < len; i += 3) {\n    const s = str.substr(i, 3);\n    const b = Math.ceil(s.length * 10 / 3);\n    pushBits(bits, b, parseInt(s, 10));\n  }\n\n  const res = {};\n\n  var d = [0, 0, 0, 1];\n  pushBits(d, 14, len);\n  res.data27 = d.concat(bits);\n\n  if (len < 4096) {\n    var d = [0, 0, 0, 1];\n    pushBits(d, 12, len);\n    res.data10 = d.concat(bits);\n  }\n\n  if (len < 1024) {\n    var d = [0, 0, 0, 1];\n    pushBits(d, 10, len);\n    res.data1 = d.concat(bits);\n  }\n\n  return res;\n}\n\n// {{{1 url encode\nfunction encode_url(str) {\n  const slash = str.indexOf('/', 8) + 1 || str.length;\n  const res = encode(str.slice(0, slash).toUpperCase(), false);\n\n  if (slash >= str.length) {\n    return res;\n  }\n\n  const path_res = encode(str.slice(slash), false);\n\n  res.data27 = res.data27.concat(path_res.data27);\n\n  if (res.data10 && path_res.data10) {\n    res.data10 = res.data10.concat(path_res.data10);\n  }\n\n  if (res.data1 && path_res.data1) {\n    res.data1 = res.data1.concat(path_res.data1);\n  }\n\n  return res;\n}\n\n// {{{1 Choose encode mode and generates struct with data for different version\nfunction encode(data, parse_url) {\n  let str;\n  const t = typeof data;\n\n  if (t == 'string' || t == 'number') {\n    str = `${data}`;\n    data = Buffer.from(str);\n  } else if (Buffer.isBuffer(data)) {\n    str = data.toString();\n  } else if (Array.isArray(data)) {\n    data = Buffer.from(data);\n    str = data.toString();\n  } else {\n    throw new Error('Bad data');\n  }\n\n  if (/^[0-9]+$/.test(str)) {\n    if (data.length > 7089) {\n      throw new Error('Too much data');\n    }\n    return encode_numeric(str);\n  }\n\n  if (/^[0-9A-Z \\$%\\*\\+\\.\\/\\:\\-]+$/.test(str)) {\n    if (data.length > 4296) {\n      throw new Error('Too much data');\n    }\n    return encode_alphanum(str);\n  }\n\n  if (parse_url && /^https?:/i.test(str)) {\n    return encode_url(str);\n  }\n\n  if (data.length > 2953) {\n    throw new Error('Too much data');\n  }\n  return encode_8bit(data);\n}\n\n// {{{1 export functions\nmodule.exports = encode;\n"]}